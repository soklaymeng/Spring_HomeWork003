pipeline {
    agent any
    environment {
        DOCKER_FILE = "Dockerfile"
        IMAGE = "mengsoklay/deops-backend"
        TAG = "0.0.0"
        VERSION = "${env.BUILD_ID}"
        GIT_MANIFEST_REPO = "https://github.com/soklaymeng/argro-spring.git"
        MANIFEST_FILE_PATH = "deployment.yaml"
        GIT_CREDENTIALS_ID = 'git-token' // GitHub credentials
        DOCKER_CREDENTIALS_ID = 'dockerhub-token' // Docker Hub credentials
    }
    stages {
        stage("Build Image") {
            steps {
                script {
                    echo "Building Spring Boot Docker image."
                    sh "docker build -t ${IMAGE}:${TAG}.${VERSION} ."
                }
            }
        }

        stage("Push image to registry (Docker Hub)") {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, passwordVariable: 'PASSWORD', usernameVariable: 'USERNAME')]) {
                        echo "Login to Docker Hub"
                        sh "docker login -u $USERNAME -p $PASSWORD"
                        sh "docker push ${IMAGE}:${TAG}.${VERSION}"
                    }
                }
            }
        }

        stage("Clone Manifest Repository") {
            steps {
                script {
                    echo "Cloning manifest repository"
                    withCredentials([usernamePassword(credentialsId: GIT_CREDENTIALS_ID, passwordVariable: 'GIT_PASS', usernameVariable: 'GIT_USER')]) {
                        sh "git clone https://${GIT_USER}:${GIT_PASS}@github.com/soklaymeng/argro-spring.git"
                    }
                }
            }
        }

        stage("Update Manifest File") {
            steps {
                script {
                    echo "Updating image tag in the manifest file"
                    sh """
                        sed -i 's|image: .*$|image: ${IMAGE}:${TAG}.${VERSION}|' argro-spring/${MANIFEST_FILE_PATH}
                    """
                }
            }
        }

        stage("Push Updated Manifest") {
            steps {
                script {
                    echo "Pushing updated manifest back to repository"
                    dir('argro-spring') {
                        withCredentials([usernamePassword(credentialsId: GIT_CREDENTIALS_ID, passwordVariable: 'GIT_PASS', usernameVariable: 'GIT_USER')]) {
                            sh """
                                git add ${MANIFEST_FILE_PATH}
                                git commit -m 'Updated image to ${IMAGE}:${TAG}.${VERSION}'
                                git push https://${GIT_USER}:${GIT_PASS}@github.com/soklaymeng/argro-spring.git
                            """
                        }
                    }
                }
            }
        }
    }
}
